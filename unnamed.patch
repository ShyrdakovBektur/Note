Index: ui/fragment/task/TaskFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ui/fragment/task/TaskFragment.kt b/ui/fragment/task/TaskFragment.kt
new file mode 100644
--- /dev/null	(revision 0bf3a75675c010b71896137292c77b37fa3910a5)
+++ b/ui/fragment/task/TaskFragment.kt	(revision 0bf3a75675c010b71896137292c77b37fa3910a5)
@@ -0,0 +1,47 @@
+package com.itproger.note.ui.fragment.task
+
+import android.os.Bundle
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.core.os.bundleOf
+import androidx.fragment.app.setFragmentResult
+import androidx.navigation.fragment.findNavController
+import com.itproger.note.R
+import com.itproger.note.databinding.FragmentTaskBinding
+import com.itproger.note.model.Task
+
+
+class TaskFragment : Fragment() {
+    private lateinit var binding: FragmentTaskBinding
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?
+    ): View {
+        binding = FragmentTaskBinding.inflate(inflater, container, false)
+        return binding.root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        binding.btnSave.setOnClickListener {
+            onSave()
+        }
+    }
+
+    private fun onSave() {
+        val data = Task(
+            title = binding.edtTitle.text.toString(),
+            description = binding.edtTitle.text.toString()
+        )
+
+        setFragmentResult(TASK_REQUEST, bundleOf(TASK_KEY to data))
+        findNavController().navigateUp()
+    }
+
+
+    companion object {
+        const val TASK_KEY = "task.result"
+        const val TASK_REQUEST = "task.result"
+    }
+}
\ No newline at end of file
